{"version":3,"sources":["practice/Componets/buttonAxios/index.js","App.js","serviceWorker.js","index.js"],"names":["apiHeart","apiSteps","apiWeight","PersonList","state","heartData","weightData","stepsData","getHeat","axios","get","getSteps","getWeight","Promise","all","this","then","responses","data","result","console","log","setState","style","backgroundColor","className","src","length","value","heartDate","trackWeight","weightDate","stepsToday","stepsDate","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4VAGMA,G,MAAW,gDACXC,EAAW,+CACXC,EAAY,gDAEGC,E,2MACnBC,MAAQ,CACNC,UAAW,GACXC,WAAY,GACZC,UAAW,I,EAGbC,QAAUC,IAAMC,IAAIV,G,EACpBW,SAAWF,IAAMC,IAAIT,G,EACrBW,UAAYH,IAAMC,IAAIR,G,mFAED,IAAD,OAClBW,QAAQC,IAAI,CAACC,KAAKP,QAASO,KAAKH,UAAWG,KAAKJ,WAAWK,MACzD,SAAAC,GACE,IAAIZ,EAAYY,EAAU,GAAGC,KAAKC,OAC9Bb,EAAaW,EAAU,GAAGC,KAAKC,OAC/BZ,EAAYU,EAAU,GAAGC,KAAKC,OAClCC,QAAQC,IAAIhB,GACZe,QAAQC,IAAIf,GACZc,QAAQC,IAAId,GACZ,EAAKe,SAAS,CACZjB,YACAC,aACAC,mB,+BAON,OACE,yBAAKgB,MAAO,CAAEC,gBAAiB,aAC7B,wBAAIC,UAAU,aAAd,kBAGA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKC,IAAI,mFACT,uCAGJ,yBAAKD,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACZV,KAAKX,MAAMC,UAAUsB,QACpB,6BAGE,4BAAKZ,KAAKX,MAAMC,UAAU,GAAGuB,MAA7B,QACA,wBAAIH,UAAU,QACXV,KAAKX,MAAMC,UAAU,GAAGwB,gBASvC,yBAAKJ,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKC,IAAI,yDACT,wCAGJ,yBAAKD,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,cACZV,KAAKX,MAAMC,UAAUsB,QACpB,6BACE,4BAAKZ,KAAKX,MAAME,WAAW,GAAGwB,YAA9B,QACA,wBAAIL,UAAU,QACXV,KAAKX,MAAME,WAAW,GAAGyB,iBASxC,yBAAKN,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKC,IAAI,wHACT,uCAGJ,yBAAKD,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,aACZV,KAAKX,MAAMC,UAAUsB,QACpB,6BACE,4BAAKZ,KAAKX,MAAMG,UAAU,GAAGyB,WAA7B,UACA,wBAAIP,UAAU,QACXV,KAAKX,MAAMG,UAAU,GAAG0B,sB,GAlGTC,IAAMC,WCO/BC,MAVf,WACE,OACE,yBAAKX,UAAU,OACb,6BACE,kBAAC,EAAD,SCIYY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,MAAK,SAAAiC,GACjCA,EAAaC,kB","file":"static/js/main.ec316caf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nconst apiHeart = \"https://vvshealthtracker.herokuapp.com/heart\";\r\nconst apiSteps = \"https://vvshealthtracker.herokuapp.com/steps\";\r\nconst apiWeight = \"https://vvshealthtracker.herokuapp.com/weight\";\r\n\r\nexport default class PersonList extends React.Component {\r\n  state = {\r\n    heartData: [],\r\n    weightData: [],\r\n    stepsData: []\r\n  };\r\n\r\n  getHeat = axios.get(apiHeart);\r\n  getSteps = axios.get(apiSteps);\r\n  getWeight = axios.get(apiWeight);\r\n\r\n  componentDidMount() {\r\n    Promise.all([this.getHeat, this.getWeight, this.getSteps]).then(\r\n      responses => {\r\n        let heartData = responses[0].data.result;\r\n        let weightData = responses[1].data.result;\r\n        let stepsData = responses[2].data.result;\r\n        console.log(heartData);\r\n        console.log(weightData);\r\n        console.log(stepsData);\r\n        this.setState({\r\n          heartData,\r\n          weightData,\r\n          stepsData\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \" #38344f\" }}>\r\n        <h1 className=\"pageTitle\">Health Tracker</h1>\r\n        {/* <button onClick=\"\">Get New Updates</button> */}\r\n\r\n        <div className=\"container\">\r\n          <div className=\"cards\">\r\n            <div className=\"face face1\">\r\n              <div className=\"content\">\r\n                <img src=\"https://cdn4.iconfinder.com/data/icons/business-line-icons-vol-2/65/70-512.png\" />\r\n                <h3>Heart</h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"face face2\">\r\n              <div className=\"content\">\r\n                <div className=\"heartData\">\r\n                  {this.state.heartData.length && (\r\n                    <div>\r\n                      {/* <h2>{this.state.heartData[0].sourceName}</h2> */}\r\n\r\n                      <h3>{this.state.heartData[0].value} bpm</h3>\r\n                      <h5 className=\"date\">\r\n                        {this.state.heartData[0].heartDate}\r\n                      </h5>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"cards\">\r\n            <div className=\"face face1\">\r\n              <div className=\"content\">\r\n                <img src=\"https://static.thenounproject.com/png/575940-200.png\" />\r\n                <h3>Weight</h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"face face2\">\r\n              <div className=\"content\">\r\n                <div className=\"weightData\">\r\n                  {this.state.heartData.length && (\r\n                    <div>\r\n                      <h2>{this.state.weightData[0].trackWeight} lbs</h2>\r\n                      <h5 className=\"date\">\r\n                        {this.state.weightData[0].weightDate}\r\n                      </h5>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"cards\">\r\n            <div className=\"face face1\">\r\n              <div className=\"content\">\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSQOgqkm8MRF5Jdjvbc3dinCcid_YJyiGMQ2fJbtaj6INH8Lp76&usqp=CAU\" />\r\n                <h3>Steps</h3>\r\n              </div>\r\n            </div>\r\n            <div className=\"face face2\">\r\n              <div className=\"content\">\r\n                <div className=\"stepsData\">\r\n                  {this.state.heartData.length && (\r\n                    <div>\r\n                      <h2>{this.state.stepsData[0].stepsToday} steps</h2>\r\n                      <h5 className=\"date\">\r\n                        {this.state.stepsData[0].stepsDate}\r\n                      </h5>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport PersonList from \"./practice/Componets/buttonAxios\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <PersonList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}